#spring settings
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true


#logging settings
logging.level.org.springframework.web=INFO
logging.file=${user.home}/logs/csp/sentinel-dashboard.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

dashboard.application.name=sentinel-dashboard
dashboard.application.port=8719
dashboard.application.dashboard=localhost:8181

dashboard.zookeeper.enable=true
dashboard.zookeeper.address=172.16.2.69:2181
dashboard.application.enable=true

# ES
#开启 Elasticsearch 仓库(默认值:true)
spring.data.elasticsearch.repositories.enabled=true
#连接elasticsearch服务器
#spring.data.elasticsearch.cluster-name Elasticsearch 集群名(默认值: elasticsearch)
spring.data.elasticsearch.cluster-name=elasticsearch
#elasticsearch settings 默认 9300 是 Java 客户端的端口。9200 是支持 Restful HTTP 的接口
#spring.data.elasticsearch.cluster-nodes 集群节点地址列表，用逗号分隔。如果没有指定，就启动一个客户端节点 localhost:9300
spring.data.elasticsearch.cluster-nodes=172.16.2.69:9300
#spring.data.elasticsearch.propertie 用来配置客户端的额外属性
#存储索引的位置
#spring.data.elasticsearch.properties.path.home=/home/data/project/target/elastic
spring.data.elasticsearch.properties.path.home=/data/project/target/elastic
#连接超时的时间
spring.data.elasticsearch.properties.transport.tcp.connect_timeout=120s



# datasource 增加数据源和JPA(hibernate)的配置
## 数据库连接(url)、用户名(username)、密码(password)用${xxx}占位符，这样可以通过maven的pom.xml添加profile配置不同环境(开发、测试、生产) 或 从配置中心读取参数。
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root

# spring data jpa
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.use-new-id-generator-mappings=false
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.show-sql=false

# springboot 2.0 中默认连接池是Hikari

## 数据库配置
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
##  Hikari 连接池配置 ------ 详细配置请访问：https://github.com/brettwooldridge/HikariCP
## 最小空闲连接数量
#spring.datasource.hikari.minimum-idle=5
### 空闲连接存活最大时间，默认600000（10分钟）
#spring.datasource.hikari.idle-timeout=180000
### 连接池最大连接数，默认是10
#spring.datasource.hikari.maximum-pool-size=10
### 此属性控制从池返回的连接的默认自动提交行为,默认值：true
#spring.datasource.hikari.auto-commit=true
### 连接池母子
#spring.datasource.hikari.pool-name=MyHikariCP
### 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
#spring.datasource.hikari.max-lifetime=1800000
### 数据库连接超时时间,默认30秒，即30000
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.connection-test-query=SELECT 1
